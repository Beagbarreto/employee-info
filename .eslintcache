[{"/home/len/Desktop/employee-info/src/index.js":"1","/home/len/Desktop/employee-info/src/App.js":"2","/home/len/Desktop/employee-info/src/reportWebVitals.js":"3","/home/len/Desktop/employee-info/src/components/main.jsx":"4","/home/len/Desktop/employee-info/src/components/EmployeeList/list.jsx":"5","/home/len/Desktop/employee-info/src/components/form.jsx":"6"},{"size":500,"mtime":1610319925144,"results":"7","hashOfConfig":"8"},{"size":167,"mtime":1610340680481,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1610319925144,"results":"10","hashOfConfig":"8"},{"size":1183,"mtime":1610429270051,"results":"11","hashOfConfig":"8"},{"size":827,"mtime":1610425109629,"results":"12","hashOfConfig":"8"},{"size":2008,"mtime":1610431201531,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"294so8",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/len/Desktop/employee-info/src/index.js",[],["29","30"],"/home/len/Desktop/employee-info/src/App.js",[],"/home/len/Desktop/employee-info/src/reportWebVitals.js",[],"/home/len/Desktop/employee-info/src/components/main.jsx",["31","32","33"],"import React from 'react';\nimport {\n  Route,\n  NavLink,\n  HashRouter\n} from \"react-router-dom\";\nimport 'materialize-css'; \nimport 'materialize-css/dist/css/materialize.min.css';\nimport '../App.css';\nimport Form from './form';\nimport List from './EmployeeList/list';\n\nconst Main = () => {\n\n  return (\n    <HashRouter>\n      <div>\n        <nav>\n          <div class=\"nav-wrapper\">\n            <a href=\"#\" class=\"brand-logo center\">Employee App</a>\n          </div>\n        </nav>\n        <div class=\"row\">\n          <div class=\"col s3\" >\n            <div class=\"row\" className=\"Button-margin\">\n              <NavLink to=\"/\"><a class=\"waves-effect waves-light btn\">Form</a></NavLink>\n            </div>\n            <div class=\"row\" className=\"Button-margin\">\n              <NavLink to=\"/list\"><a class=\"waves-effect waves-light btn\">List</a></NavLink>\n            </div>\n          </div>\n          <div class=\"col s9\" className=\"Content-centered\">\n            <div >\n              <Route exact path=\"/\" component={Form}/>\n              <Route path=\"/list\" component={List}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    </HashRouter>\n  );\n}\n \nexport default Main;","/home/len/Desktop/employee-info/src/components/EmployeeList/list.jsx",["34","35","36"],"import React, { useState } from 'react';\nimport 'materialize-css'; \nimport 'materialize-css/dist/css/materialize.min.css';\n\nfunction List() {\nconst [employeeList, setEmployeeList] = useState('');\nconst [employees, setEmployees] = useState([\n{name: 'Roger Vormittog', address: '11 Jackson Av, Scarsdale, NY', id: 1},\n{name: 'Giselle knowles', address: '15 Heathcote Road, Scarsdale, NY', id: 2},\n{name: 'Lauren George', address: '53 Winter Hill Rd, Tuckahoe, NY', id: 3},\n]);\n \n return (\n   <div>\n     <h1>List belongs here</h1>\n       {/* <EmployeeList employeeList={employeeList}/> */}\n      <div>\n        {employees.map((employee) => (\n          <div key={employee.id}>\n            <ul>\n              <li>{employee.name}</li>\n            </ul>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n \nexport default List;","/home/len/Desktop/employee-info/src/components/form.jsx",["37","38","39","40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":20,"column":13,"nodeType":"47","endLine":20,"endColumn":51},{"ruleId":"45","severity":1,"message":"48","line":26,"column":31,"nodeType":"47","endLine":26,"endColumn":71},{"ruleId":"45","severity":1,"message":"48","line":29,"column":35,"nodeType":"47","endLine":29,"endColumn":75},{"ruleId":"49","severity":1,"message":"50","line":6,"column":8,"nodeType":"51","messageId":"52","endLine":6,"endColumn":20},{"ruleId":"49","severity":1,"message":"53","line":6,"column":22,"nodeType":"51","messageId":"52","endLine":6,"endColumn":37},{"ruleId":"49","severity":1,"message":"54","line":7,"column":19,"nodeType":"51","messageId":"52","endLine":7,"endColumn":31},{"ruleId":"49","severity":1,"message":"55","line":1,"column":27,"nodeType":"51","messageId":"52","endLine":1,"endColumn":36},{"ruleId":"49","severity":1,"message":"56","line":7,"column":10,"nodeType":"51","messageId":"52","endLine":7,"endColumn":22},{"ruleId":"49","severity":1,"message":"57","line":7,"column":24,"nodeType":"51","messageId":"52","endLine":7,"endColumn":39},{"ruleId":"45","severity":1,"message":"48","line":54,"column":11,"nodeType":"47","endLine":54,"endColumn":83},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'employeeList' is assigned a value but never used.","Identifier","unusedVar","'setEmployeeList' is assigned a value but never used.","'setEmployees' is assigned a value but never used.","'useEffect' is defined but never used.","'employeeData' is assigned a value but never used.","'setEmployeeData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]